#
# Expected environment variables:
#   - GIT_BRANCH
#   - EA_ACCESS_TOKEN
#   - ACR_APP_ID
#   - ACR_PASSWD
#

version: 0.2

env:
  variables:
    ECR_REPO_NAME: "421016705922.dkr.ecr.eu-central-1.amazonaws.com/imaginary"
    ACR_REPO_NAME: "imaginary.azurecr.io/imaginary"

phases:
  install:
    runtime-versions:
      docker: 18

  pre_build:
    commands:

      - export GIT_REPO_NAME="$(basename $(git rev-parse --show-toplevel))"

      - export GIT_COMMIT_HASH="$(git show --no-patch --format=%H)"
      - export GIT_COMMIT_HASH_SHORT="$(git show --no-patch --format=%h)"

      - export GIT_AUTHOR_NAME="$(git show --no-patch --format=%an)"
      - export GIT_AUTHOR_DATE="$(git show --no-patch --format=%ad)"

      - export GIT_COMMITTER_NAME="$(git show --no-patch --format=%cn)"
      - export GIT_COMMITTER_DATE="$(git show --no-patch --format=%cd)"

      - export GIT_MSG="$(git show  --no-patch --format=%B)"
      - export GIT_MSG_SUBJECT="$(git show  --no-patch --format=%s)"
      - export GIT_MSG_BODY="$(git show  --no-patch --format=%b)"

      - export GIT_TIMESTAMP="$(git show  --no-patch --format=%ad --date=format:'%Y-%m-%dT%H-%M-%S')"

      - env | grep "^GIT_"

      # docker tag
      - export TAG="${GIT_REPO_NAME}.${GIT_BRANCH}.${GIT_TIMESTAMP}.${GIT_COMMIT_HASH_SHORT}"


  build:
    commands:
      - "echo Building the Docker image"
      - docker build -t ${GIT_REPO_NAME} .

  post_build:
    commands:

      - echo "Logging / push to Amazon ECR..."
      - $(aws ecr get-login --no-include-email --region $AWS_DEFAULT_REGION)
      - export ECR_IMAGE=${ECR_REPO_NAME}:${TAG}
      - docker tag ${GIT_REPO_NAME} ${ECR_IMAGE}
      - docker push ${ECR_IMAGE}


      - echo "Login / push to Azure ACR..."
      - docker login ${ACR_REPO_NAME} -u ${ACR_APP_ID} -p ${ACR_PASSWD}
      - export ACR_IMAGE=${ACR_REPO_NAME}:${TAG}
      - docker tag ${GIT_REPO_NAME} ${ACR_IMAGE}
      - docker push ${ACR_IMAGE}


      - echo "Notify estudy-admin"
      - |
        curl --location \
             --request POST \
             https://admin.estudy.artidis.com/update/pipelines \
             --header "Authorization: Bearer $EA_ACCESS_TOKEN" \
             --header "Content-Type: application/json" \
             --data-raw "{\"image\": \"${ECR_IMAGE}\", \"commitHash\": \"${GIT_COMMIT_HASH}\" }"
